# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-12-05 16:31
from __future__ import unicode_literals

from django.db import migrations


def update_description(apps, schema_editor):
    db = schema_editor.connection.alias

    Assassment = apps.get_model('multidb_account', 'Assessment')

    UPDATES = {
        'Understanding performance nutrition': 'consume proper food and drink to fuel growth and performance',
        'Understanding sickness / fatigure': 'balance sufficient rest and recovery with training and performance demands',
        'Understanding social media': 'responsible use of social media with awareness of long-term consequences of social media behavior',
        'Relationships with team mates': 'support and encourage team mates in a way that builds mutual trust',
        'Linking action to consequences': 'understanding the long term effects of the short term decisions both desirable & undesirable',
        'Doing what is right': 'having courage to behave in a way that is consistent with values and good character',
        'Conflict resolution': 'making the effort to listen to others while trying to understand different points of view',
        'Having fun playing': 'approaching sport practices and competitions with an eager and joyful attitude',
        'Developing self esteem': 'believing in yourself and trusting your preparation',
        'Decision making / game sense': 'awareness of how to how to play the game and put yourself and your team mates in a position to succeed',
        'Work ethic': 'following through on commitments and responsibilities',
        'Leadership': 'modeling behaviors and attitude that shows pride and inspires others to do the same',
        'Focus': 'self-discipline to stay on track and finish the job',
        'Positive self talk': 'coaching yourself to believe you can achieve your goals and overcome setbacks',
        'Goal setting': 'identifying targets for how you will improve and perform',
        'Self motivated': 'taking initiative to complete tasks and do more than the minimum',
        'Dealing with setbacks': 'bouncing back from failures and challenges',
        'Positive attitude': 'approaching sport and life with a relentless energy and a ‘can do’ spirit'
    }

    for key, value in UPDATES.items():
        ass = Assassment.objects.using(db).filter(name__icontains=key)

        if ass.count():
            o = ass.first()
            o.description = value
            o.save()


def reverse_func(apps, schema_editor):
    del apps, schema_editor


class Migration(migrations.Migration):

    dependencies = [
        ('multidb_account', '0030_auto_20171130_1533'),
    ]

    operations = [
        migrations.RunPython(update_description, reverse_func),
    ]
